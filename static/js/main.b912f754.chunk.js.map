{"version":3,"sources":["recoliState.js","axios.js","components/Task/Task.js","components/List/List.js","components/Main/Main.js","theme.js","App.js","index.js"],"names":["listStateMain","atom","key","default","fatchData","instance","axios","create","baseURL","headers","process","Task","task","useRecoilState","todoList","setTodoList","index","findIndex","listItem","replaceItemAtIndex","arr","newValue","slice","console","log","status","sx","margin","bg","checked","onChange","event","newList","put","id","title","user_id","user","then","res","catch","err","clickCheckbox","target","style","textDecoration","to","flexGrow","color","todoListSearch","searchState","selector","get","list","searchQuery","filter","item","toLowerCase","search","ListStats","totalNum","length","totalCompletedNum","completed","totalUncompletedNum","selectViews","selectChosenes","List","props","searchInput","setSearchInput","selectView","setSelectView","fetchData","useRecoilValue","result","searchResultWithSelect","stats","view","map","todoItem","flexDirection","height","position","width","maxHeight","padding","textAlign","borderBottom","placeholder","value","overflowY","display","AddTask","React","lazy","FullTask","Main","link","setFetchData","useSetRecoilState","useEffect","response","data","moreData","meta","pagination","pages","i","exact","path","render","fallback","Fragment","setlist","space","fonts","body","heading","monospace","fontWeights","bold","lineHeights","colors","text","background","primary","nextPrimary","secondary","secondaryDark","muted","mess","tasks","forms","select","fontFamily","textarea","input","marginRight","float","checkbox","cursor","buttons","bottom","right","triple","add","a","styles","root","lineHeight","fontWeight","code","fontSize","App","theme","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b912f754.chunk.js","sourcesContent":["import {atom} from 'recoil';\n\n\nexport const listStateMain = atom({\n    key: 'listStateMain',\n    default: [],\n  });\n\nexport const fatchData = atom({\n    key: 'fatchData',\n    default: false,\n  });","  \nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://gorest.co.in/public/v1',\n  \n  headers: {'Authorization': process.env.REACT_APP_API_CODE}\n});\n\nexport default instance;","import React from 'react'\nimport {useRecoilState} from 'recoil';\n\nimport axios from '../../axios';\n\n import {  Checkbox, Text, Label, Message  } from 'theme-ui';\n\nimport {NavLink} from 'react-router-dom';\n\nimport {listStateMain} from '../../recoliState';\n\nconst Task = ({task}) => {\n\n  const firstTime = false\n\n\n\n\n  \n\n  const [todoList, setTodoList] = useRecoilState(listStateMain);\n  const index = todoList.findIndex((listItem) => listItem === task);\n  \n  const clickCheckbox = (checked) => {\n\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...task,\n      status: checked ? 'completed' : 'pending',\n      \n    });\n\n    setTodoList(newList);\n\n       \n    axios.put('/todos/'+task.id , {status: checked ? 'completed' : 'pending', title:task.title, user_id:\"1000\", user: 'KubaKoder', })\n    .then(res => {\n      console.log(res);\n          \n    })\n    .catch(err => console.log(err));\n  }\n\n  const replaceItemAtIndex = (arr, index, newValue) => {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n  }\n\n  console.log(task.status)\n\n  return(\n    \t<Message  sx={{margin: 15}} bg=\"mess\">\n        <Label>\n          <Checkbox checked={task.status === 'completed' ? true : false} onChange={event => clickCheckbox(event.target.checked)}/>\n\n          <NavLink style={{textDecoration: 'none'}} to={'/'+task.id} >\n            <Text sx={{\n              flexGrow: 1, color: 'tasks'\n            }}>{task.title}</Text>\n          </NavLink>\n          \n        </Label>\n        \n      </Message>\n  );\n\n}\n\nexport default Task;","import React from 'react'\nimport {atom, selector, useRecoilState, useRecoilValue} from 'recoil';\n\nimport { Flex,Box, Button, Spinner, Input,Paragraph, Select  } from 'theme-ui'\nimport Task from '../Task/Task';\n \n\n\nimport {NavLink} from 'react-router-dom';\n\n\n\nimport {listStateMain, fatchData} from '../../recoliState';\n\nconst todoListSearch = atom({\n  key: 'todoListSearch',\n  default: '',\n});\n\nconst searchState = selector({\n  key: 'searchState', \n  get: ({get}) => {\n    const list = get(listStateMain);\n    const searchQuery = get(todoListSearch);\n    \n    return (list.filter(item => item.title.toLowerCase().search(searchQuery.toLowerCase()) !== -1));\n  },\n});\n\nconst ListStats = selector({\n  key: 'ListStats',\n  get: ({get}) => {\n    const list = get(listStateMain);\n    const totalNum = list.length;\n    const totalCompletedNum = list.filter((item) => item.completed).length;\n    const totalUncompletedNum = totalNum - totalCompletedNum;\n    \n    return {\n      totalNum,\n      totalCompletedNum,\n      totalUncompletedNum,\n    };\n  },\n});\n\n\nconst selectViews = atom({\n  key: 'selectViews',\n  default: 'Wszystkie',\n});\n\nconst selectChosenes = selector({\n  key: 'selectChosenes', \n  get: ({get}) => {\n    const search = get(searchState);\n    const ChosenSelect = get(selectViews);\n    \n    switch (ChosenSelect) {\n      case 'Wykonane':\n        return search.filter((item) => item.completed);\n      case 'Niewykonane':\n        return search.filter((item) => !item.completed);\n      default:\n        return search;\n    }\n  },\n});\n\nconst List = (props) => {\n\n  \n  const [searchInput, setSearchInput] = useRecoilState(todoListSearch);\n  const [selectView, setSelectView] = useRecoilState(selectViews);\n  \n  const fetchData = useRecoilValue(fatchData);\n  const result = useRecoilValue(listStateMain);\n  const searchResultWithSelect = useRecoilValue(selectChosenes);\n  const stats = useRecoilValue(ListStats);\n\n  let view = <Spinner sx={{margin: '25% auto',}}/>;\n\n  if (fetchData) {\n    if (result.length) {\n\n      view = searchResultWithSelect.map((todoItem) => (\n        <Task  key={todoItem.id} task={todoItem} ></Task>\n      ));\n    } else {\n      view = <Paragraph sx={{color: 'mess'}}> Brak zadań do wyświetlenia, dodaj nowe.</Paragraph>\n    }\n\n  }\n\n  return(\n  \t<Flex sx={{ flexDirection: 'column', height: '100vh', position: 'fixed', width: '100vw', maxHeight: '-webkit-fill-available'}} bg=\"muted\">\n      <Box sx={{padding: '5px', textAlign: 'right', borderBottom: '1px solid #442929', bg: 'nextPrimary'}}>\n        <Input placeholder='Wyszukaj' value={searchInput} onChange={event => setSearchInput(event.target.value)}/>\n        <Select value={selectView} onChange={(event) => {setSelectView(event.target.value)}}>\n          <option>Wszystkie</option>\n          <option>Wykonane</option>\n          <option>Niewykonane</option>\n        </Select>\n        <Paragraph sx={{ color: 'mess'}}>{`Wykonane: ${stats.totalCompletedNum} / Niewykonane ${stats.totalUncompletedNum}`}</Paragraph>\n      </Box>\n      <Box sx={{ flexGrow: 1, overflowY: 'auto', textAlign: 'center', display: 'flex', flexDirection: 'column' }}>\n        {view}\n        \n      </Box>\n      <Box>\n        <NavLink to='/newtask' \n             \n        ><Button>Dodaj Zadanie</Button></NavLink>\n      </Box>\n    </Flex>\n  );\n\n}\n\nexport default List;","import axios from \"../../axios\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nimport List from \"../List/List\";\n\nimport { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\n\nimport { listStateMain, fatchData } from \"../../recoliState\";\n\nimport { Spinner } from \"theme-ui\";\n\nconst AddTask = React.lazy(() => import(\"../AddTask/AddTask\"));\n\nconst FullTask = React.lazy(() => import(\"../FullTask/FullTask\"));\n\nconst Main = () => {\n  const [todoList, setTodoList] = useRecoilState(listStateMain);\n  const setFetchData = useSetRecoilState(fatchData);\n\n  useEffect(() => {\n    axios\n      .get(\"/users/1000/todos\")\n      .then((response) => {\n        let data = [...response.data.data];\n        let moreData = [...data];\n        if (response.data.meta.pagination.pages > 1) {\n          for (let i = 2; i <= response.data.meta.pagination.pages; i++) {\n            axios\n              .get(\"/users/1000/todos?page=\" + i)\n              .then((res) => {\n                moreData = [...moreData, ...res.data.data];\n\n                setTodoList(moreData);\n              })\n              .catch((err) => console.log(err));\n          }\n        } else {\n          setTodoList(data);\n        }\n        setFetchData(true);\n      })\n      .catch((err) => console.log(err));\n  }, [setTodoList, setFetchData]);\n\n  let link;\n\n  if (todoList) {\n    link = todoList.map((todoItem) => (\n      <Route\n        key={todoItem.id}\n        exact\n        path={\"/\" + todoItem.id}\n        render={() => (\n          <Suspense fallback={<Spinner />}>\n            <FullTask task={todoItem} />\n          </Suspense>\n        )}\n      />\n    ));\n  }\n\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <Switch>\n          <Route\n            path=\"/newtask\" //component={Auth}\n            render={() => (\n              <Suspense fallback={<Spinner />}>\n                <AddTask setlist={setTodoList} />\n              </Suspense>\n            )}\n          />\n\n          {link}\n\n          <Route\n            path=\"/\"\n            render={() => <List list={todoList} setlist={setTodoList} />}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </HashRouter>\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n","export default  {\n  space: [\n    0,\n    4,\n    8,\n    16,\n    32,\n    64,\n    128,\n    256,\n    512\n  ],\n  fonts: {\n    body: 'geomanistregular, sans-serif',\n    heading: 'geomanistregular, sans-serif',\n    monospace: 'Menlo, monospace'\n  },\n  fontWeights: {\n    body: 300,\n    heading: 500,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 2.5,\n  },\n  colors: {\n    text: '#442929',\n    background: '#fff',\n    primary: '#4c8573',\n    nextPrimary: '#4444cf',\n    secondary: '#d8f3eb',\n    secondaryDark: '#33ff7a',\n    muted: '#0e0e2f',\n    mess: '#d8f3eb',\n    tasks:'#0e0e2f',\n\n  },\n  forms: {\n    select: {\n      bg: 'secondary',\n      fontFamily: 'body',\n      \n    },\n    textarea: {\n      bg: 'secondary',\n      fontFamily: 'body',\n      \n    },\n    input: {\n      bg: 'secondary',\n      marginRight: '10px',\n      fontFamily: 'body',\n\n      '@media screen and (min-width: 500px)': {\n        width: '75%',\n        float: 'left',\n      },\n\n    },\n    checkbox: {\n      cursor: 'pointer',\n    }\n\n  },\n  \n\n \n  buttons: {\n    \n    primary: {\n      fontFamily: 'body',\n      cursor: 'pointer',  \n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      width: '100%',\n      height: 'auto',\n      '@media screen and (min-width: 500px)': {\n        width: 'max-content',\n        position: 'fixed',\n        bottom: '10px',\n        right: '10px',\n        \n      },\n    },\n    secondary: {\n      fontFamily: 'body',\n      cursor: 'pointer',\n      color: 'background',\n      bg: 'secondary',\n      '&:hover': {\n        bg: 'secondaryDark',\n      },\n    },\n    triple :{\n      fontFamily: 'body',\n      cursor: 'pointer',\n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      width: '31.33%',\n      margin: '1%'\n    },\n    add :{\n      fontFamily: 'body',\n      cursor: 'pointer',\n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      \n      margin: '1%',\n\n      '@media screen and (min-width: 500px)': {\n        \n      },\n    },\n    \n\n  },\n\n  a: {\n      color: '#000',\n      textDecoration: 'none',\n      fontFamily: 'body',\n    },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body'\n    },\n    \n    \n    \n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit'\n    },\n    \n  }\n}","import './App.css';\n\nimport Main from './components/Main/Main';\n\nimport {RecoilRoot} from 'recoil';\n\n\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\n\n\nconst App = () => {\n  \n  \n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n  \n        <Main />\n       \n      </ThemeProvider>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}