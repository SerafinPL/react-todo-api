{"version":3,"sources":["components/AddTask/AddTask.js"],"names":["AddTask","props","inputRef","useRef","setTodoList","useSetRecoilState","listStateMain","useState","input","setInput","redirect","setRedirect","loading","setloading","useEffect","current","focus","createToDo","axios","post","user","status","title","user_id","then","res","oldTodoList","id","data","completed","to","catch","err","console","log","sx","height","flexDirection","maxHeight","bg","padding","textAlign","borderBottom","color","flexGrow","justifyContent","alignItems","Fragment","ref","width","value","onChange","event","target","onKeyDown","keyCode","variant","onClick","exact","style"],"mappings":"sNAmIeA,UAtHC,SAACC,GACf,IAAMC,EAAWC,iBAAO,MAElBC,EAAcC,YAAkBC,KAEtC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,oBAAS,GAAnC,6BAEAO,qBAAU,WACRZ,EAASa,QAAQC,UAChB,IAEH,IAMMC,EAAa,WACH,KAAVT,IACFK,GAAW,GACXK,IACGC,KAAK,oBAAqB,CACzBC,KAAM,YACNC,OAAQ,UACRC,MAAOd,EACPe,QAAS,SAIVC,MAAK,SAACC,GACLhB,EAAS,IAETL,GAAY,SAACsB,GAAD,4BACPA,GADO,CAEV,CACEC,GAAIF,EAAIG,KAAKA,KAAKD,GAClBL,MAAOG,EAAIG,KAAKA,KAAKN,MACrBO,UAAWJ,EAAIG,KAAKA,KAAKC,UACzBN,QAASE,EAAIG,KAAKA,KAAKL,cAI3BV,GAAW,GACXF,EAAY,cAAC,IAAD,CAAUmB,GAAG,UAE1BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZnB,GAAW,QAOnB,OAFAoB,QAAQC,IAAItB,GAGV,eAAC,IAAD,CACEuB,GAAI,CACFC,OAAQ,OACRC,cAAe,SACfC,UAAW,0BAEbC,GAAG,QANL,UAQG7B,EAED,cAAC,IAAD,CACEyB,GAAI,CACFC,OAAQ,OACRI,QAAS,MACTC,UAAW,SACXC,aAAc,oBACdH,GAAI,cACJI,MAAO,aAPX,SAUE,cAAC,IAAD,kCAGF,cAAC,IAAD,CACER,GAAI,CACFS,SAAU,EACVP,cAAe,SACfQ,eAAgB,SAChBC,WAAY,UALhB,SAQGlC,EACC,eAAC,IAAMmC,SAAP,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMZ,GAAI,CAAEQ,MAAO,aAAnB,+BAGF,eAAC,IAAMI,SAAP,WACE,cAAC,IAAD,CACEC,IAAK9C,EACLiC,GAAI,CAAEc,MAAO,OACbC,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAW3C,EAAS2C,EAAMC,OAAOH,QAC3CI,UAvFI,SAACF,GACO,KAAlBA,EAAMG,SACRtC,OAuFM,cAAC,IAAD,CAAQuC,QAAQ,MAAMC,QAASxC,EAA/B,gCAMN,cAAC,IAAD,UACE,cAAC,IAAD,CAASa,GAAG,IAAI4B,MAAOzD,EAAMyD,MAAOC,MAAO,CAAEV,MAAO,SAApD,SACE,cAAC,IAAD","file":"static/js/3.a2bea7b1.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport axios from \"../../axios\";\n\nimport { Flex, Box, Text, Input, Button, Spinner, Heading } from \"theme-ui\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { listStateMain } from \"../../recoliState\";\n\nconst AddTask = (props) => {\n  const inputRef = useRef(null);\n\n  const setTodoList = useSetRecoilState(listStateMain);\n\n  const [input, setInput] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const [loading, setloading] = useState(false);\n  const [erros, setError] = useState(false);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const onEnter = (event) => {\n    if (event.keyCode === 13) {\n      createToDo();\n    }\n  };\n\n  const createToDo = () => {\n    if (input !== \"\") {\n      setloading(true);\n      axios\n        .post(\"/users/1000/todos\", {\n          user: 'KubaKoder',\n          status: \"pending\",\n          title: input,\n          user_id: \"1000\",\n          \n          \n        })\n        .then((res) => {\n          setInput(\"\");\n\n          setTodoList((oldTodoList) => [\n            ...oldTodoList,\n            {\n              id: res.data.data.id,\n              title: res.data.data.title,\n              completed: res.data.data.completed,\n              user_id: res.data.data.user_id,\n            },\n          ]);\n\n          setloading(false);\n          setRedirect(<Redirect to=\"/\" />);\n        })\n        .catch((err) => {\n          console.log(err);\n          setloading(false);\n        });\n    }\n  };\n\n  console.log(loading);\n\n  return (\n    <Flex\n      sx={{\n        height: \"100%\",\n        flexDirection: \"column\",\n        maxHeight: \"-webkit-fill-available\",\n      }}\n      bg=\"muted\"\n    >\n      {redirect}\n\n      <Box\n        sx={{\n          height: \"77px\",\n          padding: \"5px\",\n          textAlign: \"center\",\n          borderBottom: \"1px solid #442929\",\n          bg: \"nextPrimary\",\n          color: \"secondary\",\n        }}\n      >\n        <Heading>Dodawanie zadania</Heading>\n      </Box>\n\n      <Flex\n        sx={{\n          flexGrow: 1,\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {loading ? (\n          <React.Fragment>\n            <Spinner />\n            <Text sx={{ color: \"secondary\" }}>Dodaje Zadanie</Text>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Input\n              ref={inputRef}\n              sx={{ width: \"80%\" }}\n              value={input}\n              onChange={(event) => setInput(event.target.value)}\n              onKeyDown={onEnter}\n            />\n            <Button variant=\"add\" onClick={createToDo}>\n              Dodaj zadanie\n            </Button>\n          </React.Fragment>\n        )}\n      </Flex>\n      <Flex>\n        <NavLink to=\"/\" exact={props.exact} style={{ width: \"100vw\" }}>\n          <Button>Lista Zada≈Ñ</Button>\n        </NavLink>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default AddTask;\n"],"sourceRoot":""}