{"version":3,"sources":["recoliState.js","axios.js","components/Task/Task.js","components/List/List.js","components/Main/Main.js","theme.js","App.js","index.js"],"names":["listStateMain","atom","key","default","fatchData","instance","axios","create","baseURL","headers","Task","task","useRecoilState","todoList","setTodoList","index","findIndex","listItem","replaceItemAtIndex","arr","newValue","slice","sx","margin","bg","checked","completed","onChange","event","newList","put","id","title","then","res","console","log","catch","err","clickCheckbox","target","style","textDecoration","to","flexGrow","color","todoListSearch","searchState","selector","get","list","searchQuery","filter","item","toLowerCase","search","ListStats","totalNum","length","totalCompletedNum","totalUncompletedNum","selectViews","selectChosenes","List","props","searchInput","setSearchInput","selectView","setSelectView","fetchData","searchResultWithSelect","useRecoilValue","stats","view","map","todoItem","flexDirection","height","position","width","padding","textAlign","borderBottom","placeholder","value","overflowY","AddTask","React","lazy","FullTask","Main","link","setFetchData","useState","setReset","useEffect","response","data","moreData","meta","pagination","pages","i","exact","path","render","fallback","Fragment","newstart","setlist","space","fonts","body","heading","monospace","fontWeights","bold","lineHeights","colors","text","background","primary","nextPrimary","secondary","secondaryDark","muted","mess","tasks","forms","select","textarea","input","marginRight","float","buttons","bottom","right","triple","add","cursor","a","styles","root","fontFamily","lineHeight","fontWeight","code","fontSize","App","theme","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e25dfca.chunk.js","sourcesContent":["import {atom} from 'recoil';\n\n\nexport const listStateMain = atom({\n    key: 'listStateMain',\n    default: [],\n  });\n\nexport const fatchData = atom({\n    key: 'fatchData',\n    default: false,\n  });","  \nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://gorest.co.in/public-api',\n  \n  headers: {'Authorization': 'Bearer 2187e976d776b0eb6dcef6a043c4a3a96c4f1c92ff88c0dcff435d17d3845728'}\n});\n\nexport default instance;","import React, {useEffect, Suspense} from 'react'\nimport {atom, selector, useRecoilState} from 'recoil';\n\nimport axios from '../../axios';\n\n import { Flex,Container, Checkbox, Text, Label,Button, Spinner,Message  } from 'theme-ui';\n\nimport {NavLink} from 'react-router-dom';\n\nimport {listStateMain} from '../../recoliState';\n\nconst Task = ({task}) => {\n\n  \n  \n\n  const [todoList, setTodoList] = useRecoilState(listStateMain);\n  const index = todoList.findIndex((listItem) => listItem === task);\n  \n  const clickCheckbox = (checked) => {\n    \n    const newList = replaceItemAtIndex(todoList, index, {\n      ...task,\n      completed: checked,\n    });\n\n    setTodoList(newList);\n    \n    axios.put('/todos/'+task.id , {\"completed\":checked, \"title\":task.title, \"user_id\":\"1292\" })\n    .then(res => {\n      console.log(res);\n          \n    })\n    .catch(err => console.log(err));\n  }\n\n  const replaceItemAtIndex = (arr, index, newValue) => {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n  }\n\n  return(\n    \t<Message  sx={{margin: 15}} bg=\"mess\">\n        <Label>\n          <Checkbox checked={task.completed} onChange={event => clickCheckbox(event.target.checked)}/>\n\n          <NavLink style={{textDecoration: 'none'}} to={'/'+task.id} >\n            <Text sx={{\n              flexGrow: 1, color: 'tasks'\n            }}>{task.title}</Text>\n          </NavLink>\n          \n        </Label>\n        \n      </Message>\n  );\n\n}\n\nexport default Task;","import React, {useEffect,Suspense,useState} from 'react'\nimport {atom, selector, useRecoilState, useRecoilValue} from 'recoil';\n\nimport { Flex,Box, Container, Checkbox, Text, Label,Button, Spinner, Input,Paragraph, Select ,Message } from 'theme-ui'\nimport Task from '../Task/Task';\n \nimport axios from '../../axios';\n\nimport {NavLink} from 'react-router-dom';\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {listStateMain, fatchData} from '../../recoliState';\n\nconst todoListSearch = atom({\n  key: 'todoListSearch',\n  default: '',\n});\n\nconst searchState = selector({\n  key: 'searchState', \n  get: ({get}) => {\n    const list = get(listStateMain);\n    const searchQuery = get(todoListSearch);\n    \n    return (list.filter(item => item.title.toLowerCase().search(searchQuery.toLowerCase()) !== -1));\n  },\n});\n\nconst ListStats = selector({\n  key: 'ListStats',\n  get: ({get}) => {\n    const list = get(listStateMain);\n    const totalNum = list.length;\n    const totalCompletedNum = list.filter((item) => item.completed).length;\n    const totalUncompletedNum = totalNum - totalCompletedNum;\n    \n    return {\n      totalNum,\n      totalCompletedNum,\n      totalUncompletedNum,\n    };\n  },\n});\n\n\nconst selectViews = atom({\n  key: 'selectViews',\n  default: 'Wszystkie',\n});\n\nconst selectChosenes = selector({\n  key: 'selectChosenes', \n  get: ({get}) => {\n    const search = get(searchState);\n    const ChosenSelect = get(selectViews);\n    \n    switch (ChosenSelect) {\n      case 'Wykonane':\n        return search.filter((item) => item.completed);\n      case 'Niewykonane':\n        return search.filter((item) => !item.completed);\n      default:\n        return search;\n    }\n  },\n});\n\nconst List = (props) => {\n\n  const [searchInput, setSearchInput] = useRecoilState(todoListSearch);\n  const [selectView, setSelectView] = useRecoilState(selectViews);\n  const [todoList, setTodoList] = useRecoilState(listStateMain);\n  const [fetchData, setFetchData] = useRecoilState(fatchData);\n  const searchResult = useRecoilValue(searchState);\n  const searchResultWithSelect = useRecoilValue(selectChosenes);\n  const stats = useRecoilValue(ListStats);\n\n  let view = <Spinner sx={{margin: '25% auto',}}/>;\n\n  if (fetchData) {\n    view = searchResultWithSelect.map((todoItem) => (\n      <Task  key={todoItem.id} task={todoItem} ></Task>\n    ));\n\n  }\n\n  return(\n  \t<Flex sx={{ flexDirection: 'column', height: '100vh', position: 'fixed', width: '100vw',}} bg=\"muted\">\n      <Box sx={{padding: '5px', textAlign: 'right', borderBottom: '1px solid #442929', bg: 'nextPrimary'}}>\n        <Input placeholder='Wyszukaj' value={searchInput} onChange={event => setSearchInput(event.target.value)}/>\n        <Select value={selectView} onChange={(event) => {setSelectView(event.target.value)}}>\n          <option>Wszystkie</option>\n          <option>Wykonane</option>\n          <option>Niewykonane</option>\n        </Select>\n        <Paragraph sx={{ color: 'mess'}}>{`Wykonane: ${stats.totalCompletedNum} / Niewykonane ${stats.totalUncompletedNum}`}</Paragraph>\n      </Box>\n      <Box sx={{ flexGrow: 1, overflowY: 'auto', textAlign: 'center'}}>\n        {view}\n      </Box>\n      <Box>\n        <NavLink to='/newtask' \n             \n        ><Button>Dodaj Zadanie</Button></NavLink>\n      </Box>\n    </Flex>\n  );\n\n}\n\nexport default List;","\nimport axios from '../../axios';\nimport React, {useEffect, useState, Suspense} from 'react'\nimport {atom, selector, useRecoilState} from 'recoil';\n\nimport List from '../List/List';\n\nimport Navi from '../Navi/Navi';\n\nimport {NavLink, Route,HashRouter, Switch, Redirect} from 'react-router-dom';\n\nimport {listStateMain, fatchData} from '../../recoliState';\n\nimport { Button, Input, Spinner } from 'theme-ui';\n\nconst AddTask = React.lazy( () => import('../AddTask/AddTask') );\n\n\nconst FullTask = React.lazy( () => import('../FullTask/FullTask') );\n\nconst Main = () => {\n\n\n\tconst [todoList, setTodoList] = useRecoilState(listStateMain);\n\tconst [fetchData, setFetchData] = useRecoilState(fatchData);\n\tconst [reset, setReset] = useState(0);\n  \n  \n  useEffect(() =>{\n    axios.get('/users/1292/todos')\n    .then(response => {\n\n      let data = [...response.data.data];\n      let moreData = [...data];\n      if ( response.data.meta.pagination.pages > 1) {\n      \t\n      \tfor (let i = 2; i <= response.data.meta.pagination.pages; i++){\n      \t\taxios.get('/users/1292/todos?page=' + i)\n      \t\t.then(res => {\n      \t\t\t\n      \t\t\tmoreData = [...moreData, ...res.data.data]\n      \t\n      \t\t\tsetTodoList(moreData);\n      \t\t\t\n      \t\t})\n      \t\t.catch(err => console.log(err));\n      \t}\n      \t\n      } else {\n      \tsetTodoList(data);\n\n      }\n      setFetchData(true);\n    })\n    .catch(err => console.log(err));\n\n  },[]);\n\n\n\n\tlet link;\n\n\t\tif (todoList) {\n      link = todoList.map((todoItem) => (\n        <Route key={todoItem.id} exact path={'/' +todoItem.id} \n            render={() => (\n                <Suspense fallback={<Spinner/>}>\n                  <FullTask task={todoItem}/>\n                </Suspense> \n              )}\n        />\n      ));\n  \t}\n\n    return(\n    \t<React.Fragment>\n    \t<HashRouter>\n        \n        <Switch>\n          <Route path='/newtask' //component={Auth} \n            \trender={() => (\n                <Suspense fallback={<Spinner/>}>\n                  <AddTask newstart={setReset} setlist={setTodoList}/>\n                </Suspense> \n              )}\n          />\n\n          {link}\n\n          <Route path='/' render={() =>(\n                <List  list={todoList} setlist={setTodoList}/>\n              )} \n          />\n                   \n          <Redirect to='/' />\n              \n        </Switch>\n        \n      </HashRouter>\n    \t\n    \t\t\n    \t\t\n        \n      </React.Fragment>);\n\n}\n\nexport default Main;","export default   {\n  space: [\n    0,\n    4,\n    8,\n    16,\n    32,\n    64,\n    128,\n    256,\n    512\n  ],\n  fonts: {\n    body: 'Inter, sans-serif',\n    heading: 'Verdana, sans-serif',\n    monospace: 'Menlo, monospace'\n  },\n  fontWeights: {\n    body: 300,\n    heading: 500,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 2.5,\n  },\n  colors: {\n    text: '#442929',\n    background: '#fff',\n    primary: '#4c8573',\n    nextPrimary: '#4444cf',\n    secondary: '#d8f3eb',\n    secondaryDark: '#33ff7a',\n    muted: '#0e0e2f',\n    mess: '#d8f3eb',\n    tasks:'#0e0e2f',\n\n  },\n  forms: {\n    select: {\n      bg: 'secondary',\n      \n    },\n    textarea: {\n      bg: 'secondary',\n      \n    },\n    input: {\n      bg: 'secondary',\n      marginRight: '10px',\n\n      '@media screen and (min-width: 500px)': {\n        width: '75%',\n        float: 'left',\n      },\n\n    }\n  },\n  \n\n \n  buttons: {\n    primary: {\n           \n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      width: '100%',\n      height: 'auto',\n      '@media screen and (min-width: 500px)': {\n        width: 'max-content',\n        position: 'fixed',\n        bottom: '10px',\n        right: '10px',\n        \n      },\n    },\n    secondary: {\n      color: 'background',\n      bg: 'secondary',\n      '&:hover': {\n        bg: 'secondaryDark',\n      },\n    },\n    triple :{\n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      width: '31.33%',\n      margin: '1%'\n    },\n    add :{\n      color: 'secondary',\n      bg: 'primary',\n      '&:hover': {\n        bg: 'mess',\n        color: 'primary',\n      },\n      \n      margin: '1%',\n\n      '@media screen and (min-width: 500px)': {\n        \n      },\n    },\n    cursor: 'pointer',\n\n  },\n\n  a: {\n      color: '#000',\n      textDecoration: 'none'\n    },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body'\n    },\n    \n    \n    \n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit'\n    },\n    \n  }\n}","import './App.css';\n\nimport Main from './components/Main/Main';\n\nimport {RecoilRoot} from 'recoil';\n\n\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\n\n\nconst App = () => {\n  \n  \n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n  \n        <Main />\n       \n      </ThemeProvider>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}